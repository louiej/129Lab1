
import infixtopostfix.InfixToPostfix;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import postfix.Postfix;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author LJR
 */
public class gui extends javax.swing.JFrame {

    Openfile of = new Openfile();
    int cntr = 1;
    int num = 1;
    String temp = null; // temp and temp2 for same file error trapping
    String temp2 = null;

    /**
     * Creates new form gui
     */
    public gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openfilebtn = new javax.swing.JButton();
        processbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        openfilebtn.setText("Open File");
        openfilebtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        openfilebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openfilebtnActionPerformed(evt);
            }
        });

        processbtn.setText("Process");
        processbtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        processbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processbtnActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(openfilebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(processbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openfilebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openfilebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openfilebtnActionPerformed
        // TODO add your handling code here:

        try {
            cntr++;
            of.PickMe(); // open select file dialog

            if (num % 2 == 0) {
                temp = of.fileChooser.getSelectedFile().getAbsolutePath();
            } else {
                temp2 = of.fileChooser.getSelectedFile().getAbsolutePath();
            }
            jTextArea1.setText("File named " + of.fileChooser.getSelectedFile().getName() + " was loaded successfully.\n");
        } catch (Exception e) {
            e.printStackTrace();
        }

        if (temp == temp2) {
            jTextArea1.setText("You are trying to load the same file.");

        }

        num++;
    }//GEN-LAST:event_openfilebtnActionPerformed

    private void processbtnActionPerformed(java.awt.event.ActionEvent evt) {
        String[] lines, postfixString;
        String outputPostfix, line;
        InfixToPostfix converter;
        Postfix example;

        lines = of.sb.toString().split("\n");
        outputPostfix = "";
        converter = new InfixToPostfix();

        for (String testString1 : lines) {
            //System.out.println("infix: " + testString1);
            line = converter.convertToPostfix(testString1);
            //System.out.println("postfix: " + line);
            outputPostfix += line + "\n";
        }

        postfixString = outputPostfix.split("\n");

        /*
         * Conversion 
         */
        String textGUI = "";
        example = new Postfix();

        for (String testString1 : postfixString) {
            String tempStr = "Postfix: " + testString1 + "\n" + "Evaluation: " + example.computePostfix(testString1) + "\n";
            textGUI += tempStr;
            System.out.println("answer" + example.computePostfix(testString1));
        }

        textGUI += example.getKeyValues();
        jTextArea1.setText(textGUI);
        //File file = new File(of.fileChooser.getSelectedFile().getParent() + "/output.out");
        // OutputStream out = new FileOutputStream(file);
        try (PrintWriter writer = new PrintWriter((of.fileChooser.getSelectedFile().getParent() + "/output.out"), "UTF-8")) {
            //File file = new File(of.fileChooser.getSelectedFile().getParent() + "/output.out");
            // OutputStream out = new FileOutputStream(file);
            writer.print(textGUI);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton openfilebtn;
    private javax.swing.JButton processbtn;
    // End of variables declaration//GEN-END:variables
}
